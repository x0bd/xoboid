---
import type { Project } from "@/data/projects";

type Props = Project;

const { title, techs, link, isComingSoon, description } = Astro.props;

const formatTechs = (values: string[]) =>
	values.toString().replaceAll(",", " â€¢ ");
---

<!-- RAINBOW -->
<>
	{
		isComingSoon && (
			<div class="t group flex w-full flex-col justify-between gap-2 rounded-md border border-neutral-700 p-4 md:flex-row md:items-center">
				<div class="flex flex-col gap-2 text-green md:flex-row md:items-center md:gap-4">
					<div class="flex flex-row gap-4">
						<p class="text-white">{title}</p>
						<p class="text-cyan">{description}</p>
					</div>

					<p>{formatTechs(techs)}</p>
				</div>

				<p class="w-fit rounded-md bg-gray px-4 py-1 text-red">Soon</p>
			</div>
		)
	}

	{
		!isComingSoon && (
			<a
				class="group flex w-full cursor-pointer flex-col justify-between gap-2 rounded-md border border-neutral-700 p-4 transition-all duration-300 hover:-translate-y-2 hover:border-green hover:text-green md:flex-row md:items-center"
				href={link}
				target="_blank"
				rel="noreferrer"
			>
				<div class="flex flex-col gap-4 text-green md:flex-row md:items-center">
					<div class="flex flex-row gap-4">
						<p class="text-red">{title}</p>
						<p class="text-cyan">{description}</p>
					</div>

					<p>{formatTechs(techs)}</p>
				</div>

				<svg
					width="18"
					height="18"
					viewBox="0 0 18 18"
					fill="none"
					class="transition-all duration-300 group-hover:translate-x-1"
				>
					<path
						d="M5.25 12.75L12.75 5.25"
						stroke="#999999"
						stroke-linecap="round"
						stroke-linejoin="round"
					/>
					<path
						d="M5.25 5.25H12.75V12.75"
						stroke="#999999"
						stroke-linecap="round"
						stroke-linejoin="round"
					/>
				</svg>
			</a>
		)
	}
</>
